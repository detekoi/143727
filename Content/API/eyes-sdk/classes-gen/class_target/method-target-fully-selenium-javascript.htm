<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditionTagExpression="include[General.Online]">
    <head>
        <!-- TEMPLATE VERSION 1.2 6/3/2018 -->
		<title> fully</title>
    </head>
    <body>
		<div class="mpld-api">

			<h1 class="title" id="mpld-api-method"> fully method</h1>
			<div class="mpld-select-language">
				<span class="mpld-header-label">Class: </span>
				<a class="link mpld-header-field" href="../../index-gen/class-target-selenium-javascript.htm">Target</a>
				<span class="mpld-header-label">Platform: </span>
				<a class="link mpld-header-field" href="../../indexm/sdk-platformIndex-selenium.htm">Selenium</a>
				<span class="mpld-header-label" id="mpld-select-language-label">Language: </span>
				<span id="mpld-select-language-field" class="mpld-header-field">  JavaScript </span>
				<div class="dropdown-menu">
					<div class="mpld-dropdown">
						<a href="javascript:void(0)" 
							id="change-language-text"  
							class="link mpld-dropdown-button"> 
							other languages
							<span class="fa fa-angle-down"></span>
						</a>
						<div id="change-language-menu" class="mpld-dropdown-content"></div>                                          
					</div>
				</div>
			</div>

				<div>Defines if the screenshot for this target should be extended to contain the
entire element or region being checked,
even if it extends the borders of the viewport.</div>
				<div></div>
				
				
				<h2 class="title" id="mpld-api-syntax">Syntax</h2>
<pre ><code class="hljs">
eyes.check(Target.fully(stitchContent))
</code></pre>

				<h3 class="title" id="mpld-api-params">Parameters</h3>
				<!-- start parametersTemplate -->
				<dl class="mpld-paramdef parameters-list">     <dt class="mpld-paramdef-name">
				         <span class="mpld-paramdef-name-label"></span>
				         <span class="mpld-paramdef-name-value"><span class ="code-label">stitchContent</span></span>
				     </dt>
				     <dd class="mpld-paramdef-type">
				       <span class="mpld-paramdef-type-label">Type:</span>
				       <span class="mpld-paramdef-type-value"><span class ="code-label">boolean</span></span>
				       <span class="mpld-paramdef-is-optional"></span>
				     </dd>
				     <dd class="mpld-paramdef-descr">
				       <span class="mpld-paramdef-descr-label"></span>
				       <span class="mpld-paramdef-descr-value">If this parameter has a value of true, then Eyes will use scrolling and stitching to capture the entire page.
				If its false then only the viewport will be captured.
				If the method is called without a parameter, then the default is true.</span>
				     </dd>
				</dl>
				<!-- parametersTemplate -->
				<h3 class="title" id="mpld-api-return">Return value</h3>
                <!-- pre compile start -->
                	<dl class="mpld-paramdef">
						<dt class="mpld-paramdef-type">  
							<span class="mpld-paramdef-type-label"> Type: </span>
							<span class="mpld-paramdef-type-value"> <span class ="code-label">Target</span> </span>				
						</dt>
                        <dd class="mpld-paramdef-descr">
							    
                        </dd>
					</dl>
			
<h2 class="title">Remarks</h2>

This method overrides the global default or the value set by <a class ="link" href="#"><span class="code-label" data-mpld-lookup="eyes$setforcefullpagescreenshot">lookupid</span></a>
If stitching is done, then the stitch mode used, 
<a class ="link" href="#"><span class="code-label" data-mpld-lookup="stitchmode$css">lookupid</span></a> or <a class ="link" href="#"><span class="code-label" data-mpld-lookup="stitchmode$scroll">lookupid</span></a> is determined by the global default, or the value set using <a class ="link" href="#"><span class="code-label" data-mpld-lookup="eyes$setStitchMode">lookupid</span></a>.
You may only call this method once in a given target.


<!-- Not working yet
-->
		</div>

		<script src="/docs/scripts/mpldlookup.js"></script>
		<script>
			mpld.setPagePlatFormLanguage("selenium", "javascript");
			mpldLookup.setPagePlatFormLanguage("selenium", "javascript");
		</script>
    </body>
</html>